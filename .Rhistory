prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(1600);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
# psi11
mean(na.omit(Res[,11]))
mean(na.omit(Res[,11])-Truth[,1])
sd(Res[,11]); mean(sqrt(Res[,12]))
prop.table(table(Truth[,1] > Res[,11] - qnorm(0.975)*sqrt(Res[,12]) & Truth[,1] < Res[,11] + qnorm(0.975)*sqrt(Res[,12])))
#psi01
mean(na.omit(Res[,13]))
mean(na.omit(Res[,13])-Truth[,2])
sd(Res[,13]); mean(sqrt(Res[,14]))
prop.table(table(Truth[,2] > Res[,13] - qnorm(0.975)*sqrt(Res[,14]) & Truth[,2] < Res[,13] + qnorm(0.975)*sqrt(Res[,14])))
for(i in 26:1000){
data <- simulateData(1600);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
# psi11
mean(na.omit(Res[,11]))
mean(na.omit(Res[,11])-Truth[,1])
sd(Res[,11]); mean(sqrt(Res[,12]))
prop.table(table(Truth[,1] > Res[,11] - qnorm(0.975)*sqrt(Res[,12]) & Truth[,1] < Res[,11] + qnorm(0.975)*sqrt(Res[,12])))
#psi01
mean(na.omit(Res[,13]))
mean(na.omit(Res[,13])-Truth[,2])
sd(Res[,13]); mean(sqrt(Res[,14]))
prop.table(table(Truth[,2] > Res[,13] - qnorm(0.975)*sqrt(Res[,14]) & Truth[,2] < Res[,13] + qnorm(0.975)*sqrt(Res[,14])))
#psi00
mean(na.omit(Res[,15]))
mean(na.omit(Res[,15])-Truth[,3])
sd(Res[,15]); mean(sqrt(Res[, 16]))
prop.table(table(Truth[,3] > Res[,15] - qnorm(0.975)*sqrt(Res[,16]) & Truth[,3] < Res[,15] + qnorm(0.975)*sqrt(Res[,16])))
for(i in 71:1000){
data <- simulateData(1600);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
# psi11
mean(na.omit(Res[,11]))
mean(na.omit(Res[,11])-Truth[,1])
sd(Res[,11]); mean(sqrt(Res[,12]))
prop.table(table(Truth[,1] > Res[,11] - qnorm(0.975)*sqrt(Res[,12]) & Truth[,1] < Res[,11] + qnorm(0.975)*sqrt(Res[,12])))
#psi01
mean(na.omit(Res[,13]))
mean(na.omit(Res[,13])-Truth[,2])
sd(Res[,13]); mean(sqrt(Res[,14]))
prop.table(table(Truth[,2] > Res[,13] - qnorm(0.975)*sqrt(Res[,14]) & Truth[,2] < Res[,13] + qnorm(0.975)*sqrt(Res[,14])))
#psi00
mean(na.omit(Res[,15]))
mean(na.omit(Res[,15])-Truth[,3])
sd(Res[,15]); mean(sqrt(Res[, 16]))
prop.table(table(Truth[,3] > Res[,15] - qnorm(0.975)*sqrt(Res[,16]) & Truth[,3] < Res[,15] + qnorm(0.975)*sqrt(Res[,16])))
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(2000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 50);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
# psi11
mean(na.omit(Res[,11]))
mean(na.omit(Res[,11])-Truth[,1])
sd(Res[,11]); mean(sqrt(Res[,12]))
prop.table(table(Truth[,1] > Res[,11] - qnorm(0.975)*sqrt(Res[,12]) & Truth[,1] < Res[,11] + qnorm(0.975)*sqrt(Res[,12])))
#psi01
mean(na.omit(Res[,13]))
mean(na.omit(Res[,13])-Truth[,2])
sd(Res[,13]); mean(sqrt(Res[,14]))
prop.table(table(Truth[,2] > Res[,13] - qnorm(0.975)*sqrt(Res[,14]) & Truth[,2] < Res[,13] + qnorm(0.975)*sqrt(Res[,14])))
#psi00
mean(na.omit(Res[,15]))
mean(na.omit(Res[,15])-Truth[,3])
sd(Res[,15]); mean(sqrt(Res[, 16]))
prop.table(table(Truth[,3] > Res[,15] - qnorm(0.975)*sqrt(Res[,16]) & Truth[,3] < Res[,15] + qnorm(0.975)*sqrt(Res[,16])))
res <- list()
trueval<- list()
10^6
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 100);
trueVal <- theTruth(n=10^7,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 100);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
for(i in 24:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 100);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
for(i in 31:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 100);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
for(i in 16:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
# psi11
mean(na.omit(Res[,11]))
mean(na.omit(Res[,11])-Truth[,1])
sd(Res[,11]); mean(sqrt(Res[,12]))
prop.table(table(Truth[,1] > Res[,11] - qnorm(0.975)*sqrt(Res[,12]) & Truth[,1] < Res[,11] + qnorm(0.975)*sqrt(Res[,12])))
#psi01
mean(na.omit(Res[,13]))
mean(na.omit(Res[,13])-Truth[,2])
sd(Res[,13]); mean(sqrt(Res[,14]))
prop.table(table(Truth[,2] > Res[,13] - qnorm(0.975)*sqrt(Res[,14]) & Truth[,2] < Res[,13] + qnorm(0.975)*sqrt(Res[,14])))
for(i in 31:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
# psi11
mean(na.omit(Res[,11]))
mean(na.omit(Res[,11])-Truth[,1])
sd(Res[,11]); mean(sqrt(Res[,12]))
prop.table(table(Truth[,1] > Res[,11] - qnorm(0.975)*sqrt(Res[,12]) & Truth[,1] < Res[,11] + qnorm(0.975)*sqrt(Res[,12])))
#psi01
mean(na.omit(Res[,13]))
mean(na.omit(Res[,13])-Truth[,2])
sd(Res[,13]); mean(sqrt(Res[,14]))
prop.table(table(Truth[,2] > Res[,13] - qnorm(0.975)*sqrt(Res[,14]) & Truth[,2] < Res[,13] + qnorm(0.975)*sqrt(Res[,14])))
#psi00
mean(na.omit(Res[,15]))
mean(na.omit(Res[,15])-Truth[,3])
sd(Res[,15]); mean(sqrt(Res[, 16]))
prop.table(table(Truth[,3] > Res[,15] - qnorm(0.975)*sqrt(Res[,16]) & Truth[,3] < Res[,15] + qnorm(0.975)*sqrt(Res[,16])))
for(i in 51:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals))
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
# psi11
mean(na.omit(Res[,11]))
mean(na.omit(Res[,11])-Truth[,1])
sd(Res[,11]); mean(sqrt(Res[,12]))
prop.table(table(Truth[,1] > Res[,11] - qnorm(0.975)*sqrt(Res[,12]) & Truth[,1] < Res[,11] + qnorm(0.975)*sqrt(Res[,12])))
