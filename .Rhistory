gsde <- mean(data[["QL_1.a1.gstar.star"]]) - mean(data[["QL_1.a0.gstar.star"]])
sde.prop <- sde/oe
sie.prop <- sie/oe
psi.a1.ga1 <-data[, mean(QL_1.a1.ga1.star)]
psi.a1.ga0 <-data[, mean(QL_1.a1.ga0.star)]
psi.a0.ga0 <-data[, mean(QL_1.a0.ga0.star)]
sdevar <- data[, var(eif.a1.ga0 - eif.a0.ga0)/n]
sievar <- data[, var(eif.a1.ga1 - eif.a1.ga0)/n]
oevar <- data[, var(eif.a1.ga1 - eif.a0.ga0)/n]
gsdevar <- var(data[["eif.a1.gstar"]] - data[["eif.a0.gstar"]])/n
sde.prop.var <- data[, var(((eif.a1.ga0 - eif.a0.ga0 + sde)/oe)-(sde/oe^2)*(eif.a1.ga1 - eif.a0.ga0 + oe)) / n]
sie.prop.var <- data[, var(((eif.a1.ga1 - eif.a1.ga0 + sie)/oe)-(sie/oe^2)*(eif.a1.ga1 - eif.a0.ga0 + oe)) / n]
psi.a1.ga1.var <-data[, var(eif.a1.ga1)/n]
psi.a1.ga0.var <-data[, var(eif.a1.ga0)/n]
psi.a0.ga0.var <-data[, var(eif.a0.ga0)/n]
est <- data.table("sde"=sde, "sdevar"=sdevar,
"sie"=sie, "sievar"=sievar,
"oe"=oe, "oevar"=oevar,
"gsde"=oe, "gsdevar"=oevar,
"sde.prop"=sde.prop, "sde.prop.var"=sde.prop.var,
"sie.prop"=sie.prop, "sie.prop.var"=sie.prop.var,
"psi11"=psi.a1.ga1, "psi11var"=psi.a1.ga1.var,
"psi10"=psi.a1.ga0, "psi10var"=psi.a1.ga0.var,
"psi00"=psi.a0.ga0, "psi00var"=psi.a0.ga0.var)
est
source("~/GitHub/NASH-mediation/R/fitLTMLE.R")
setwd("C:\\Users\\VXMB\\OneDrive - Novo Nordisk\\Documents\\NASH-mediation")
for(f in list.files("R",".R$",full.names=TRUE)){source(f)}
for(f in list.files("functions",".R$",full.names=TRUE)){source(f)}
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(400);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 16, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 8, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
for(i in 31:1000){
data <- simulateData(400);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
source("~/GitHub/NASH-mediation/R/theTruth.R")
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(400);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
source("~/GitHub/NASH-mediation/R/theTruth.R")
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
Truth[,7]
Res[,7]
source("~/GitHub/NASH-mediation/R/fitLTMLE.R")
source("~/GitHub/NASH-mediation/R/theTruth.R")
res <- list()
trueval<- list()
for(i in 1:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
for(i in 51:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
for(i in 86:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
Truth2 <- theTruth(n=10^6,coefM1 =c(0.5, 0.85, 0.75), coefM2 = c(0.5, 0.9, 1.0, -0.2),
sdM1 =1 , sdM2 = 1, pi=0.5)
sde.0 <- Truth2$sde.true
sie.0 <- Truth2$sie.true
te.0 <- Truth2$oe.true
gsde.0 <- Truth2$gsde.true
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
prop.table(table(gsde.0 > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & gsde.0 < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
for(i in 110:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
prop.table(table(gsde.0 > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & gsde.0 < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
for(i in 254:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
prop.table(table(gsde.0 > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & gsde.0 < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
for(i in 395:1000){
data <- simulateData(4000);
fit_bin40 <-fitLTMLE(data, t=c(1,2), L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel= list("C1 ~ A", "C2 ~ A + M1"),
Mmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel=list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel= "RY ~ A + M2 + L2",
Ymodel="Y ~ A + M2 + L2",
QLmodel= list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0, n_bins = 40);
trueVal <- theTruth(n=10^6,coefM1 = fit_bin40$fitg[[1]]$coefficients, coefM2 = fit_bin40$fitg[[2]]$coefficients,
sdM1 =sd(fit_bin40$fitg[[1]]$residuals) , sdM2 = sd(fit_bin40$fitg[[2]]$residuals), pi=fit_bin40$pi)
res[[i]] <- fit_bin40$est
trueval[[i]] <-trueVal
print(i)
}
Res <- matrix(unlist(res), ncol = 18, byrow = TRUE)
Truth <- matrix(unlist(trueval), ncol = 9, byrow = TRUE)
# results sde
mean(na.omit(Res[,1]))
mean(na.omit(Res[,1])-Truth[,4])
sd(Res[,1]); mean(sqrt(Res[,2]))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(sde.0 > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & sde.0 < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
prop.table(table(Truth[,4] > Res[,1] - qnorm(0.975)*sqrt(Res[,2]) & Truth[,4] < Res[,1] + qnorm(0.975)*sqrt(Res[,2])))
# results sie
mean(na.omit(Res[,3]))
mean(na.omit(Res[,3])-Truth[,5])
sd(Res[,3]); mean(sqrt(Res[, 4]))
prop.table(table(Truth[,5] > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & Truth[,5] < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
prop.table(table(sie.0 > Res[,3] - qnorm(0.975)*sqrt(Res[,4]) & sie.0 < Res[,3] + qnorm(0.975)*sqrt(Res[,4])))
#result te
mean(na.omit(Res[,5]))
mean(na.omit(Res[,5])-Truth[,6])
sd(Res[,5]); mean(sqrt(Res[, 6]))
prop.table(table(Truth[,6] > Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & Truth[,6] < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
prop.table(table(te.0> Res[,5] - qnorm(0.975)*sqrt(Res[, 6]) & te.0 < Res[,5] + qnorm(0.975)*sqrt(Res[, 6])))
#result gsde
mean(na.omit(Res[,7]))
mean(na.omit(Res[,7])-Truth[,7])
sd(Res[,7]); mean(sqrt(Res[, 8]))
prop.table(table(Truth[,7] > Res[,7] - qnorm(0.975)*sqrt(Res[, 8]) & Truth[,7] < Res[,7] + qnorm(0.975)*sqrt(Res[, 8])))
