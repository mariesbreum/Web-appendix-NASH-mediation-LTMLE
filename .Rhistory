Mnodes = c("M1", "M2")
length(Mnodes)
qnorm(0.975)
source("~/GitHub/NASH-mediation/R/fitLTMLE.R")
library(data.table)
library(sl3)
for(f in list.files("R",".R$",full.names=TRUE)){source(f)}
for(f in list.files("functions",".R$",full.names=TRUE)){source(f)}
fit <- fitLTMLE(data, L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel = list("C1 ~ A", "C2 ~ A + M1"),
Mmodel = list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel = list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel = "RY ~ A + M2 + L2",
Ymodel = "Y ~ A + M2 + L2",
QLmodel = list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0)
set.seed(67394)
data <- simulateData(n=500)
fit <- fitLTMLE(data, L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel = list("C1 ~ A", "C2 ~ A + M1"),
Mmodel = list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel = list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel = "RY ~ A + M2 + L2",
Ymodel = "Y ~ A + M2 + L2",
QLmodel = list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0)
fit$est
source("~/GitHub/NASH-mediation/R/fitLTMLE.R")
fit <- fitLTMLE(data, L0nodes = c("L01"), Anode = "A", Cnodes = c("C1", "C2"),
Lnodes = c("L1", "L2"), Mnodes = c("M1", "M2"), RYnode = "RY", Ynode = "Y",
Cmodel = list("C1 ~ A", "C2 ~ A + M1"),
Mmodel = list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
gmodel = list("M1 ~ A + L1", "M2 ~ M1 + A + L2"),
RYmodel = "RY ~ A + M2 + L2",
Ymodel = "Y ~ A + M2 + L2",
QLmodel = list("QL1 ~ L01 + A", "QL2 ~ L01 + L1 + A + M1"),
a1 = 1, a0 = 0)
fit$est
matrix(-c(0.41, -1.25, -0.24)/0.61,3,1)
exp(-0.52/0.48)
exp(-1.27/0.26)
simBrain <- function(n,
indCens=FALSE,
model="A",
tau=1){
m <- lava::lvm()
lava::distribution(m, ~ methyleret) <- lava::binomial.lvm(p=0.5)
lava::distribution(m, ~ log_total_bvvol) <- lava::normal.lvm(mean=1.46, sd=1.20)
lava::distribution(m, ~ log_total_fetvol) <- lava::normal.lvm(mean=2.37, sd=1.33)
# censoring time
lava::distribution(m,~t0) <- lava::coxWeibull.lvm(scale=exp(-1.27/0.26),shape=1/0.26)
if(indCens==FALSE){
lava::regression(m,t0~methyleret) <- -0.75
}
# survival time
if(model=="A"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.52/0.48),shape=1/0.48)
lava::regression(m,t1~methyleret+log_total_fetvol) <- -c(0.38, -0.21)/0.48
}
if(model=="B"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.42/0.46),shape=1/0.46)
lava::regression(m,t1~methyleret+log_total_bvvol) <- -c(0.39, -0.28)/0.61
}
m <- lava::eventTime(m,time~min(t0=0,t1=1),"status")
simdat <- lava::sim(m,n)
suppressWarnings(data.table::setDT(simdat))
simdat[time > tau, status:=0]
simdat[time > tau, time:=tau]
simdat[,methyleret:=factor(methyleret,levels=c(0,1),labels=c("1","2"))]
#simdat[,xidh:=factor(xidh, levels=c(0,1),labels=c("1","2"))]
simdat
}
data <- simBrain(n=300, indCens = FALSE, model="A", tau=1)
library(survival)
library(timereg)
library(data.table)
library(ggsurvfit)
survfit2(Surv(time, status) ~ 1, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
xlab("Time (years)")
survfit2(Surv(time, 1-status) ~ 1, data = Data_til_TM) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
ylab("Censoring Probability")+
xlab("Time (years)")
survfit2(Surv(time, 1-status) ~ 1, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
ylab("Censoring Probability")+
xlab("Time (years)")
1/0.26
1/0.48
exp(-1.27/0.26)
exp(-1.27/0.5)
simBrain <- function(n,
indCens=FALSE,
model="A",
tau=1){
m <- lava::lvm()
lava::distribution(m, ~ methyleret) <- lava::binomial.lvm(p=0.5)
lava::distribution(m, ~ log_total_bvvol) <- lava::normal.lvm(mean=1.46, sd=1.20)
lava::distribution(m, ~ log_total_fetvol) <- lava::normal.lvm(mean=2.37, sd=1.33)
# censoring time
lava::distribution(m,~t0) <- lava::coxWeibull.lvm(scale=exp(-1.27/0.5),shape=1/0.5)
if(indCens==FALSE){
lava::regression(m,t0~methyleret) <- -0.75
}
# survival time
if(model=="A"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.52/0.48),shape=1/0.48)
lava::regression(m,t1~methyleret+log_total_fetvol) <- -c(0.38, -0.21)/0.48
}
if(model=="B"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.42/0.46),shape=1/0.46)
lava::regression(m,t1~methyleret+log_total_bvvol) <- -c(0.39, -0.28)/0.61
}
m <- lava::eventTime(m,time~min(t0=0,t1=1),"status")
simdat <- lava::sim(m,n)
suppressWarnings(data.table::setDT(simdat))
simdat[time > tau, status:=0]
simdat[time > tau, time:=tau]
simdat[,methyleret:=factor(methyleret,levels=c(0,1),labels=c("1","2"))]
#simdat[,xidh:=factor(xidh, levels=c(0,1),labels=c("1","2"))]
simdat
}
data <- simBrain(n=300, indCens = FALSE, model="A", tau=1)
survfit2(Surv(time, 1-status) ~ 1, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
ylab("Censoring Probability")+
xlab("Time (years)")
simBrain <- function(n,
indCens=FALSE,
model="A",
tau=1){
m <- lava::lvm()
lava::distribution(m, ~ methyleret) <- lava::binomial.lvm(p=0.5)
lava::distribution(m, ~ log_total_bvvol) <- lava::normal.lvm(mean=1.46, sd=1.20)
lava::distribution(m, ~ log_total_fetvol) <- lava::normal.lvm(mean=2.37, sd=1.33)
# censoring time
lava::distribution(m,~t0) <- lava::coxWeibull.lvm(scale=exp(-1.2/0.5),shape=1/0.5)
if(indCens==FALSE){
lava::regression(m,t0~methyleret) <- -0.75
}
# survival time
if(model=="A"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.52/0.48),shape=1/0.48)
lava::regression(m,t1~methyleret+log_total_fetvol) <- -c(0.38, -0.21)/0.48
}
if(model=="B"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.42/0.46),shape=1/0.46)
lava::regression(m,t1~methyleret+log_total_bvvol) <- -c(0.39, -0.28)/0.61
}
m <- lava::eventTime(m,time~min(t0=0,t1=1),"status")
simdat <- lava::sim(m,n)
suppressWarnings(data.table::setDT(simdat))
simdat[time > tau, status:=0]
simdat[time > tau, time:=tau]
simdat[,methyleret:=factor(methyleret,levels=c(0,1),labels=c("1","2"))]
#simdat[,xidh:=factor(xidh, levels=c(0,1),labels=c("1","2"))]
simdat
}
data <- simBrain(n=300, indCens = FALSE, model="A", tau=1)
survfit2(Surv(time, 1-status) ~ 1, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
ylab("Censoring Probability")+
xlab("Time (years)")
survfit2(Surv(time, 1-status) ~ methyleret, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
ylab("Censoring Probability")+
xlab("Time (years)")
exp(-1/0.5)
simBrain <- function(n,
indCens=FALSE,
model="A",
tau=1){
m <- lava::lvm()
lava::distribution(m, ~ methyleret) <- lava::binomial.lvm(p=0.5)
lava::distribution(m, ~ log_total_bvvol) <- lava::normal.lvm(mean=1.46, sd=1.20)
lava::distribution(m, ~ log_total_fetvol) <- lava::normal.lvm(mean=2.37, sd=1.33)
# censoring time
lava::distribution(m,~t0) <- lava::coxWeibull.lvm(scale=exp(-1/0.5),shape=1/0.5)
if(indCens==FALSE){
lava::regression(m,t0~methyleret) <- -0.75
}
# survival time
if(model=="A"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.52/0.48),shape=1/0.48)
lava::regression(m,t1~methyleret+log_total_fetvol) <- -c(0.38, -0.21)/0.48
}
if(model=="B"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.42/0.46),shape=1/0.46)
lava::regression(m,t1~methyleret+log_total_bvvol) <- -c(0.39, -0.28)/0.61
}
m <- lava::eventTime(m,time~min(t0=0,t1=1),"status")
simdat <- lava::sim(m,n)
suppressWarnings(data.table::setDT(simdat))
simdat[time > tau, status:=0]
simdat[time > tau, time:=tau]
simdat[,methyleret:=factor(methyleret,levels=c(0,1),labels=c("1","2"))]
#simdat[,xidh:=factor(xidh, levels=c(0,1),labels=c("1","2"))]
simdat
}
data <- simBrain(n=300, indCens = FALSE, model="A", tau=1)
survfit2(Surv(time, status) ~ 1, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
xlab("Time (years)")
survfit2(Surv(time, 1-status) ~ methyleret, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
ylab("Censoring Probability")+
xlab("Time (years)")
exp(-0.52/0.48)
exp(-1/0.5)
exp(-0.52/0.48)
simBrain <- function(n,
indCens=FALSE,
model="A",
tau=1){
m <- lava::lvm()
lava::distribution(m, ~ methyleret) <- lava::binomial.lvm(p=0.5)
lava::distribution(m, ~ log_total_bvvol) <- lava::normal.lvm(mean=1.46, sd=1.20)
lava::distribution(m, ~ log_total_fetvol) <- lava::normal.lvm(mean=2.37, sd=1.33)
# censoring time
lava::distribution(m,~t0) <- lava::coxWeibull.lvm(scale=0.2,shape=1/0.5)
if(indCens==FALSE){
lava::regression(m,t0~methyleret) <- -0.75
}
# survival time
if(model=="A"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.52/0.48),shape=1/0.48)
lava::regression(m,t1~methyleret+log_total_fetvol) <- -c(0.38, -0.21)/0.48
}
if(model=="B"){
lava::distribution(m,~t1) <- lava::coxWeibull.lvm(scale=exp(-0.42/0.46),shape=1/0.46)
lava::regression(m,t1~methyleret+log_total_bvvol) <- -c(0.39, -0.28)/0.61
}
m <- lava::eventTime(m,time~min(t0=0,t1=1),"status")
simdat <- lava::sim(m,n)
suppressWarnings(data.table::setDT(simdat))
simdat[time > tau, status:=0]
simdat[time > tau, time:=tau]
simdat[,methyleret:=factor(methyleret,levels=c(0,1),labels=c("1","2"))]
#simdat[,xidh:=factor(xidh, levels=c(0,1),labels=c("1","2"))]
simdat
}
data <- simBrain(n=300, indCens = FALSE, model="A", tau=1)
survfit2(Surv(time, 1-status) ~ methyleret, data = data) |>
ggsurvfit(linewidth = 1) +
add_confidence_interval() +
add_risktable() +
scale_ggsurvfit()+
ylab("Censoring Probability")+
xlab("Time (years)")
log(0.2)
log(0.2)*0.5
exp(-0.8/0.5)
-c(0.38, -0.21)/0.48
-c(0.39, -0.28)/0.61
-c(0.38, -0.21)/0.48
-c(0.39, -0.28)/0.61
-c(0.50, -0.21)/0.48
-c(0.30, -0.21)/0.48
error_Cox_n300 <- readRDS("H:/error_Cox_n300.RDS")
table(error_Cox_n300)
error_Cox_n300 <- readRDS("H:/error_Cox_n500.RDS")
table(error_Cox_n300)
45-22
table1 <- targets::tar_read(table1)
setDT(table1)
library(data.table)
View(table1)
setwd("~/GitHub/NASH-mediation")
# packages
# ---------------------------------------------------------------------
library(targets)
library(tarchetypes)
thepackages <- c("data.table",
"sl3")
tar_make()
source("~/GitHub/NASH-mediation/functions/theTruth.R")
tar_make()
tar_make()
